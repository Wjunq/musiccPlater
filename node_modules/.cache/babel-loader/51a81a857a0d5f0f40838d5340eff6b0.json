{"ast":null,"code":"import _regeneratorRuntime from \"F:/Fanny/musicplayer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/Fanny/musicplayer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n// 引入Swpier\nimport Swiper from \"swiper\";\nimport \"swiper/css/swiper.min.css\"; // 引入banner数据\n\nimport { reqBannerList } from \"@/api\";\nexport default {\n  name: \"Banner\",\n  data: function data() {\n    return {\n      banners: []\n    };\n  },\n  methods: {\n    getBannerList: function getBannerList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return reqBannerList();\n\n              case 2:\n                result = _context.sent;\n\n                if (result.code === 200) {\n                  _this.$message({\n                    message: \"轮播图数据请求成功\",\n                    type: \"success\"\n                  });\n                } else {\n                  _this.$message({\n                    message: \"轮播图数据请求失败\",\n                    type: \"warning\"\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.getBannerList();\n  },\n  watch: {\n    banners: function banners() {\n      this.$nextTick();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;AAOA;AACA;AACA,mC,CACA;;AACA;AACA;EACAA,cADA;EAEAC,IAFA,kBAEA;IACA;MACAC;IADA;EAGA,CANA;EAOAC;IACAC,aADA,2BACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,eADA;;cAAA;gBACAC,MADA;;gBAEA;kBACA;oBACAC,oBADA;oBAEAC;kBAFA;gBAIA,CALA,MAKA;kBACA;oBACAD,oBADA;oBAEAC;kBAFA;gBAIA;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA;EAdA,CAPA;EAuBAC,OAvBA,qBAuBA;IACA;EACA,CAzBA;EA0BAC;IACAR,OADA,qBACA;MACA;IACA;EAHA;AA1BA","names":["name","data","banners","methods","getBannerList","reqBannerList","result","message","type","mounted","watch"],"sourceRoot":"src/views/Banner","sources":["index.vue"],"sourcesContent":["<template>\r\n<div>\r\n    banner组件\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// 引入Swpier\r\nimport Swiper from \"swiper\";\r\nimport \"swiper/css/swiper.min.css\";\r\n// 引入banner数据\r\nimport { reqBannerList } from \"@/api\";\r\nexport default {\r\n  name: \"Banner\",\r\n  data() {\r\n    return {\r\n      banners:[]\r\n    }\r\n  },\r\n  methods: {\r\n    async getBannerList() {\r\n      let result = await reqBannerList();\r\n      if (result.code === 200) {\r\n        this.$message({\r\n          message: \"轮播图数据请求成功\",\r\n          type: \"success\",\r\n        });\r\n      } else {\r\n        this.$message({\r\n          message: \"轮播图数据请求失败\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getBannerList();\r\n  },\r\n  watch:{\r\n   banners(){\r\n     this.$nextTick()\r\n   }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}