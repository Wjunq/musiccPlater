{"ast":null,"code":"import _regeneratorRuntime from \"F:/Fanny/musicplayer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/Fanny/musicplayer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { reqSingerList } from \"@/api\";\nexport default {\n  name: \"Main\",\n  data: function data() {\n    return {\n      artists: [],\n      singerCheck: {\n        type: \"-1\",\n        area: \"-1\",\n        offset: 0,\n        more: true\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getSingerList();\n  },\n  methods: {\n    getSingerList: function getSingerList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return reqSingerList(_this.singerCheck);\n\n              case 2:\n                result = _context.sent;\n\n                if (result.code === 200) {\n                  _this.artists = result.artists;\n                  _this.singerCheck.more = result.more;\n                } else {\n                  _this.$message({\n                    type: \"warning\",\n                    message: \"歌手列表数据加载错误\"\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 处理上一页按钮的回调\n    handlerOlder: function handlerOlder() {\n      if (this.singerCheck.offset === 0) {\n        this.$message({\n          type: \"warning\",\n          message: \"没有数据了\"\n        });\n      } else {\n        this.singerCheck.offset -= 30;\n      }\n    },\n    // 处理下一页按钮的回调\n    hadlerNext: function hadlerNext() {\n      if (this.singerCheck.more) {\n        this.singerCheck.offset += 30;\n      } else {\n        this.$message({\n          type: \"warning\",\n          message: \"没有数据了\"\n        });\n      }\n    },\n    // 跳转歌手主页的回调\n    handlerToDetail: function handlerToDetail(name, img1v1Url, id) {\n      var singerDetail = {\n        name: name,\n        img1v1Url: img1v1Url,\n        id: id\n      };\n      this.$router.push({\n        path: '/classify/classifyDetails',\n        query: singerDetail\n      });\n    }\n  },\n  watch: {\n    singerCheck: {\n      deep: true,\n      handler: function handler() {\n        this.getSingerList();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;EACAA,YADA;EAEAC,IAFA,kBAEA;IACA;MACAC,WADA;MAEAC;QACAC,UADA;QAEAC,UAFA;QAGAC,SAHA;QAIAC;MAJA;IAFA;EASA,CAZA;EAaAC,OAbA,qBAaA;IACA;EACA,CAfA;EAgBAC;IACAC,aADA,2BACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,gCADA;;cAAA;gBACAC,MADA;;gBAEA;kBACA;kBACA;gBACA,CAHA,MAGA;kBACA;oBACAR,eADA;oBAEAS;kBAFA;gBAIA;;cAVA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAWA,CAZA;IAaA;IACAC,YAdA,0BAcA;MACA;QACA;UACAV,eADA;UAEAS;QAFA;MAIA,CALA,MAKA;QACA;MACA;IACA,CAvBA;IAwBA;IACAE,UAzBA,wBAyBA;MACA;QACA;MACA,CAFA,MAEA;QACA;UACAX,eADA;UAEAS;QAFA;MAIA;IACA,CAlCA;IAmCA;IACAG,eApCA,2BAoCAhB,IApCA,EAoCAiB,SApCA,EAoCAC,EApCA,EAoCA;MACA;QAAAlB;QAAAiB;QAAAC;MAAA;MACA;QACAC,iCADA;QAEAC;MAFA;IAIA;EA1CA,CAhBA;EA4DAC;IACAlB;MACAmB,UADA;MAEAC,OAFA,qBAEA;QACA;MACA;IAJA;EADA;AA5DA","names":["name","data","artists","singerCheck","type","area","offset","more","mounted","methods","getSingerList","reqSingerList","result","message","handlerOlder","hadlerNext","handlerToDetail","img1v1Url","id","path","query","watch","deep","handler"],"sourceRoot":"src/views/Classify","sources":["index.vue"],"sourcesContent":["<template>\r\n<!-- \r\n未完善的功能：\r\n点击下一页和上一页之后，要将滑轮滚到最上面\r\n -->\r\n  <div id=\"main-wapper\">\r\n    <div v-if=\"$route.fullPath === '/classify'\">\r\n      <!-- 标题 -->\r\n      <div class=\"page-header\">\r\n        <h1><i class=\"glyphicon glyphicon-user\"></i>歌手分类</h1>\r\n      </div>\r\n      <!-- 筛选歌手属性 -->\r\n      <div>\r\n        <span style=\"padding-right: 20px\"><strong>歌手分类:</strong> </span>\r\n        <el-radio-group v-model=\"singerCheck.type\" style=\"padding-right: 40px\">\r\n          <el-radio-button label=\"-1\">全部</el-radio-button>\r\n          <el-radio-button label=\"1\">男歌手</el-radio-button>\r\n          <el-radio-button label=\"2\">女歌手</el-radio-button>\r\n          <el-radio-button label=\"3\">乐队</el-radio-button>\r\n        </el-radio-group>\r\n        <span style=\"padding-right: 20px\"><strong>地区:</strong></span>\r\n        <el-radio-group v-model=\"singerCheck.area\">\r\n          <el-radio-button label=\"-1\">全部</el-radio-button>\r\n          <el-radio-button label=\"7\">华语</el-radio-button>\r\n          <el-radio-button label=\"96\">欧美</el-radio-button>\r\n          <el-radio-button label=\"8\">日本</el-radio-button>\r\n          <el-radio-button label=\"16\">韩国</el-radio-button>\r\n          <el-radio-button label=\"0\">其他</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <!-- 用于展示歌手列表-->\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6 col-md-4\" v-for=\"art in artists\" :key=\"art.id\">\r\n          <div class=\"thumbnail\">\r\n            <img\r\n              :src=\"art.img1v1Url\"\r\n              :alt=\"art.name\"\r\n              @click=\"handlerToDetail(art.name,art.img1v1Url,art.id)\"\r\n            />\r\n            <div class=\"caption\">\r\n              <h3>{{ art.name }}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 页码切换 -->\r\n      <nav>\r\n        <el-button type=\"success\" round @click=\"handlerOlder\">上一页</el-button>\r\n        <el-button type=\"success\" round @click=\"hadlerNext\">下一页</el-button>\r\n      </nav>\r\n    </div>\r\n\r\n    <!--  -->\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reqSingerList } from \"@/api\";\r\nexport default {\r\n  name: \"Main\",\r\n  data() {\r\n    return {\r\n      artists: [],\r\n      singerCheck: {\r\n        type: \"-1\",\r\n        area: \"-1\",\r\n        offset: 0,\r\n        more: true,\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getSingerList();\r\n  },\r\n  methods: {\r\n    async getSingerList() {\r\n      let result = await reqSingerList(this.singerCheck);\r\n      if (result.code === 200) {\r\n        this.artists = result.artists;\r\n        this.singerCheck.more = result.more;\r\n      } else {\r\n        this.$message({\r\n          type: \"warning\",\r\n          message: \"歌手列表数据加载错误\",\r\n        });\r\n      }\r\n    },\r\n    // 处理上一页按钮的回调\r\n    handlerOlder() {\r\n      if (this.singerCheck.offset === 0) {\r\n        this.$message({\r\n          type: \"warning\",\r\n          message: \"没有数据了\",\r\n        });\r\n      } else {\r\n        this.singerCheck.offset -= 30;\r\n      }\r\n    },\r\n    // 处理下一页按钮的回调\r\n    hadlerNext() {\r\n      if (this.singerCheck.more) {\r\n        this.singerCheck.offset += 30;\r\n      } else {\r\n        this.$message({\r\n          type: \"warning\",\r\n          message: \"没有数据了\",\r\n        });\r\n      }\r\n    },\r\n    // 跳转歌手主页的回调\r\n    handlerToDetail(name,img1v1Url,id) {\r\n      const singerDetail = {name,img1v1Url,id}\r\n      this.$router.push({\r\n        path:'/classify/classifyDetails',\r\n        query:singerDetail\r\n      })\r\n    },\r\n  },\r\n  watch: {\r\n    singerCheck: {\r\n      deep: true,\r\n      handler() {\r\n        this.getSingerList();\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#main-wapper {\r\n  width: 1800px;\r\n  margin: 0 auto;\r\n  padding-top: 20px;\r\n  div.el-pagination {\r\n    padding-bottom: 20px;\r\n  }\r\n  .page-header {\r\n    i {\r\n      padding-right: 10px;\r\n    }\r\n  }\r\n  img {\r\n    width: 875px;\r\n    height: 560px;\r\n  }\r\n  nav {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    padding-bottom: 20px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}