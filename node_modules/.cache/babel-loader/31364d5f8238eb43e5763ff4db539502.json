{"ast":null,"code":"import _regeneratorRuntime from \"F:/Fanny/musicplayer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/Fanny/musicplayer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { reqSingerList } from \"@/api\";\nexport default {\n  name: \"Main\",\n  data: function data() {\n    return {\n      artists: [],\n      singerCheck: {\n        type: \"-1\",\n        area: \"-1\"\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getSingerList();\n  },\n  methods: {\n    getSingerList: function getSingerList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this$singerCheck, type, area, result;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$singerCheck = _this.singerCheck, type = _this$singerCheck.type, area = _this$singerCheck.area;\n                _context.next = 3;\n                return reqSingerList(type, area);\n\n              case 3:\n                result = _context.sent;\n\n                if (result.code === 200) {\n                  _this.artists = result.artists;\n                } else {\n                  _this.$message({\n                    type: \"warning\",\n                    message: \"歌手列表数据加载错误\"\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  watch: {\n    singerCheck: {\n      deep: true,\n      handler: function handler() {\n        this.getSingerList();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;EACAA,YADA;EAEAC,IAFA,kBAEA;IACA;MACAC,WADA;MAEAC;QACAC,UADA;QAEAC;MAFA;IAFA;EAOA,CAVA;EAWAC,OAXA,qBAWA;IACA;EACA,CAbA;EAcAC;IACAC,aADA,2BACA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA,oBACA,iBADA,EACAJ,IADA,qBACAA,IADA,EACAC,IADA,qBACAA,IADA;gBAAA;gBAAA,OAEAI,yBAFA;;cAAA;gBAEAC,MAFA;;gBAGA;kBACA;gBACA,CAFA,MAEA;kBACA;oBACAN,eADA;oBAEAO;kBAFA;gBAIA;;cAVA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAWA;EAZA,CAdA;EA4BAC;IACAT;MACAU,UADA;MAEAC,OAFA,qBAEA;QACA;MACA;IAJA;EADA;AA5BA","names":["name","data","artists","singerCheck","type","area","mounted","methods","getSingerList","reqSingerList","result","message","watch","deep","handler"],"sourceRoot":"src/views/Home/Main","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div id=\"main-wapper\">\r\n    <!-- 标题 -->\r\n    <div class=\"page-header\">\r\n      <h1><i class=\"glyphicon glyphicon-user\"></i>歌手分类</h1>\r\n    </div>\r\n    <!-- 实现参数的传递 -->\r\n    <div>\r\n      <span style=\"padding-right: 20px\"><strong>歌手分类:</strong> </span>\r\n      <el-radio-group v-model=\"singerCheck.type\" style=\"padding-right: 40px\">\r\n        <el-radio-button label=\"-1\">全部</el-radio-button>\r\n        <el-radio-button label=\"1\">男歌手</el-radio-button>\r\n        <el-radio-button label=\"2\">女歌手</el-radio-button>\r\n        <el-radio-button label=\"3\">乐队</el-radio-button>\r\n      </el-radio-group>\r\n      <span style=\"padding-right: 20px\"><strong>地区:</strong></span>\r\n      <el-radio-group v-model=\"singerCheck.area\">\r\n        <el-radio-button label=\"-1\">全部</el-radio-button>\r\n        <el-radio-button label=\"7\">华语</el-radio-button>\r\n        <el-radio-button label=\"96\">欧美</el-radio-button>\r\n        <el-radio-button label=\"8\">日本</el-radio-button>\r\n        <el-radio-button label=\"16\">韩国</el-radio-button>\r\n        <el-radio-button label=\"0\">其他</el-radio-button>\r\n      </el-radio-group>\r\n    </div>\r\n    <!-- 用于展示歌手列表-->\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6 col-md-4\" v-for=\"art in artists\" :key=\"art.id\">\r\n        <div class=\"thumbnail\">\r\n          <img :src=\"art.img1v1Url\" alt=\"\" />\r\n          <div class=\"caption\">\r\n            <h3>{{ art.name }}</h3>\r\n            <p>\r\n              英文名称：\r\n              <i v-for=\"(n, index) in art.alias\" :key=\"index\">{{ n }};</i>\r\n            </p>\r\n            <p>\r\n              <a href=\"#\" class=\"btn btn-primary\" role=\"button\">Button</a>\r\n              <a href=\"#\" class=\"btn btn-default\" role=\"button\">Button</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 分页器 -->\r\n    <el-pagination background layout=\"prev, pager, next\" :total=\"1000\">\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reqSingerList } from \"@/api\";\r\nexport default {\r\n  name: \"Main\",\r\n  data() {\r\n    return {\r\n      artists: [],\r\n      singerCheck: {\r\n        type: \"-1\",\r\n        area: \"-1\",\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getSingerList();\r\n  },\r\n  methods: {\r\n    async getSingerList() {\r\n      const {type,area} = this.singerCheck\r\n      let result = await reqSingerList(type,area);\r\n      if (result.code === 200) {\r\n        this.artists = result.artists;\r\n      } else {\r\n        this.$message({\r\n          type: \"warning\",\r\n          message: \"歌手列表数据加载错误\",\r\n        });\r\n      }\r\n    },\r\n  },\r\n  watch:{\r\n    singerCheck:{\r\n      deep:true,\r\n      handler(){\r\n        this.getSingerList()\r\n      }\r\n\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#main-wapper {\r\n  width: 1800px;\r\n  margin: 0 auto;\r\n  padding-top: 20px;\r\n  .page-header {\r\n    i {\r\n      padding-right: 10px;\r\n    }\r\n  }\r\n  img {\r\n    width: 875px;\r\n    height: 560px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}