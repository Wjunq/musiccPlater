{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport ajax from \"./ajax\"; //  用请求banner的数据\n\nexport var reqBannerList = function reqBannerList() {\n  return ajax.get('/banner?type=0');\n}; // 用于请求电台banner\n\nexport var reqTransceiverBanner = function reqTransceiverBanner() {\n  return ajax.get('/dj/banner');\n}; // 用于登录的请求\n\nexport var reqLogin = function reqLogin(phone, password) {\n  return ajax.post(\"/login/cellphone?phone=\".concat(phone, \"&password=\").concat(password));\n}; // 用于获取歌手分类列表\n\nexport var reqSingerList = function reqSingerList(_ref) {\n  var type = _ref.type,\n      area = _ref.area,\n      offset = _ref.offset;\n  return ajax.get(\"/artist/list?type=\".concat(type, \"&area=\").concat(area, \"&offset=\").concat(offset));\n}; // 用于请求歌手的全部歌曲\n\nexport var reqSingerAll = function reqSingerAll(id, offset) {\n  return ajax.get(\"/artist/songs?id=\".concat(id, \"&limit=30&offset=\").concat(offset));\n}; // 用于请求音乐Url的回调,服务器更新了有问题\n// export const reqMusicUrl = (id) => ajax.get(`/song/url?id=${id}`)\n// 获取歌词的请求\n\nexport var reqMusiclLyric = function reqMusiclLyric(id) {\n  return ajax.get(\"/lyric?id=\".concat(id));\n}; // 用于请求发送手机验证码的回调\n\nexport var reqSendPhoneVerify = function reqSendPhoneVerify(phone) {\n  return ajax.get(\"/captcha/sent?phone=\".concat(phone));\n}; // 用于请求验证验证码是否成功\n\nexport var reqCaptchaIsOk = function reqCaptchaIsOk(phone, captcha) {\n  return ajax.get(\"/captcha/verify?phone=\".concat(phone, \"&captcha=\").concat(captcha));\n}; // 用于游客登录的回调  ,该接口有问题\n\nexport var reqAnonimous = function reqAnonimous() {\n  return ajax.post('/register/anonimous');\n}; // 用于163邮箱登录的回调\n\nexport var reqEmail = function reqEmail(_ref2) {\n  var email = _ref2.email,\n      passwd = _ref2.passwd;\n  return ajax.post(\"/login?email=\".concat(email, \"@163.com&password=\").concat(passwd));\n}; // 用于请求二维码key的请求\n\nexport var reqQrKey = function reqQrKey() {\n  return ajax.get('/login/qr/key', Date.now());\n}; // 用于生成二维码的回调\n\nexport var reqQrCreate = function reqQrCreate(key) {\n  return ajax.get(\"/login/qr/create?key=\".concat(key), Date.now());\n};","map":{"version":3,"names":["ajax","reqBannerList","get","reqTransceiverBanner","reqLogin","phone","password","post","reqSingerList","type","area","offset","reqSingerAll","id","reqMusiclLyric","reqSendPhoneVerify","reqCaptchaIsOk","captcha","reqAnonimous","reqEmail","email","passwd","reqQrKey","Date","now","reqQrCreate","key"],"sources":["F:/Fanny/musicplayer/src/api/index.js"],"sourcesContent":["import ajax from \"./ajax\";\r\n\r\n//  用请求banner的数据\r\nexport const reqBannerList = () => ajax.get('/banner?type=0')\r\n// 用于请求电台banner\r\nexport const reqTransceiverBanner = () => ajax.get('/dj/banner')      \r\n// 用于登录的请求\r\nexport const reqLogin = (phone,password) => ajax.post(`/login/cellphone?phone=${phone}&password=${password}`)\r\n// 用于获取歌手分类列表\r\nexport const reqSingerList = ({type,area,offset})=>ajax.get(`/artist/list?type=${type}&area=${area}&offset=${offset}`)\r\n// 用于请求歌手的全部歌曲\r\nexport const reqSingerAll = (id,offset)=>ajax.get(`/artist/songs?id=${id}&limit=30&offset=${offset}`)\r\n\r\n// 用于请求音乐Url的回调,服务器更新了有问题\r\n// export const reqMusicUrl = (id) => ajax.get(`/song/url?id=${id}`)\r\n// 获取歌词的请求\r\nexport const reqMusiclLyric = (id) => ajax.get(`/lyric?id=${id}`)\r\n\r\n// 用于请求发送手机验证码的回调\r\nexport const reqSendPhoneVerify = (phone) => ajax.get(`/captcha/sent?phone=${phone}`)\r\n// 用于请求验证验证码是否成功\r\nexport const reqCaptchaIsOk = (phone,captcha) => ajax.get(`/captcha/verify?phone=${phone}&captcha=${captcha}`)\r\n// 用于游客登录的回调  ,该接口有问题\r\nexport const reqAnonimous = () => ajax.post('/register/anonimous');\r\n// 用于163邮箱登录的回调\r\nexport const reqEmail = ({email,passwd}) => ajax.post(`/login?email=${email}@163.com&password=${passwd}`)\r\n// 用于请求二维码key的请求\r\nexport const reqQrKey = () => ajax.get('/login/qr/key',Date.now())\r\n// 用于生成二维码的回调\r\nexport const reqQrCreate = (key) => ajax.get(`/login/qr/create?key=${key}`,Date.now())\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;EAAA,OAAMD,IAAI,CAACE,GAAL,CAAS,gBAAT,CAAN;AAAA,CAAtB,C,CACP;;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;EAAA,OAAMH,IAAI,CAACE,GAAL,CAAS,YAAT,CAAN;AAAA,CAA7B,C,CACP;;AACA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAOC,QAAP;EAAA,OAAoBN,IAAI,CAACO,IAAL,kCAAoCF,KAApC,uBAAsDC,QAAtD,EAApB;AAAA,CAAjB,C,CACP;;AACA,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB;EAAA,IAAEC,IAAF,QAAEA,IAAF;EAAA,IAAOC,IAAP,QAAOA,IAAP;EAAA,IAAYC,MAAZ,QAAYA,MAAZ;EAAA,OAAsBX,IAAI,CAACE,GAAL,6BAA8BO,IAA9B,mBAA2CC,IAA3C,qBAA0DC,MAA1D,EAAtB;AAAA,CAAtB,C,CACP;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAIF,MAAJ;EAAA,OAAaX,IAAI,CAACE,GAAL,4BAA6BW,EAA7B,8BAAmDF,MAAnD,EAAb;AAAA,CAArB,C,CAEP;AACA;AACA;;AACA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACD,EAAD;EAAA,OAAQb,IAAI,CAACE,GAAL,qBAAsBW,EAAtB,EAAR;AAAA,CAAvB,C,CAEP;;AACA,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACV,KAAD;EAAA,OAAWL,IAAI,CAACE,GAAL,+BAAgCG,KAAhC,EAAX;AAAA,CAA3B,C,CACP;;AACA,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAACX,KAAD,EAAOY,OAAP;EAAA,OAAmBjB,IAAI,CAACE,GAAL,iCAAkCG,KAAlC,sBAAmDY,OAAnD,EAAnB;AAAA,CAAvB,C,CACP;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;EAAA,OAAMlB,IAAI,CAACO,IAAL,CAAU,qBAAV,CAAN;AAAA,CAArB,C,CACP;;AACA,OAAO,IAAMY,QAAQ,GAAG,SAAXA,QAAW;EAAA,IAAEC,KAAF,SAAEA,KAAF;EAAA,IAAQC,MAAR,SAAQA,MAAR;EAAA,OAAoBrB,IAAI,CAACO,IAAL,wBAA0Ba,KAA1B,+BAAoDC,MAApD,EAApB;AAAA,CAAjB,C,CACP;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;EAAA,OAAMtB,IAAI,CAACE,GAAL,CAAS,eAAT,EAAyBqB,IAAI,CAACC,GAAL,EAAzB,CAAN;AAAA,CAAjB,C,CACP;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;EAAA,OAAS1B,IAAI,CAACE,GAAL,gCAAiCwB,GAAjC,GAAuCH,IAAI,CAACC,GAAL,EAAvC,CAAT;AAAA,CAApB"},"metadata":{},"sourceType":"module"}