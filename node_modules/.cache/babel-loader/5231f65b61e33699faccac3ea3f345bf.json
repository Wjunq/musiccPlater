{"ast":null,"code":"import _regeneratorRuntime from \"F:/Fanny/musicplayer/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"F:/Fanny/musicplayer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 引入Swpier\nimport Swiper from \"swiper\";\nimport \"swiper/css/swiper.min.css\"; // 引入banner数据\n\nimport { reqBannerList } from \"@/api\";\nexport default {\n  name: \"Banner\",\n  data: function data() {\n    return {\n      bannerList: []\n    };\n  },\n  methods: {\n    getBannerList: function getBannerList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return reqBannerList();\n\n              case 2:\n                result = _context.sent;\n\n                if (result.code === 200) {\n                  _this.bannerList = result.banners;\n                } else {\n                  _this.$message({\n                    message: \"轮播图数据请求失败\",\n                    type: \"warning\"\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.getBannerList();\n  },\n  watch: {\n    bannerList: function bannerList() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        new Swiper(_this2.$refs.banner_swiper, {\n          spaceBetween: 30,\n          //每一屏之间的距离\n          autoplay: {\n            //自动轮播配置\n            delay: 2000,\n            //轮播间隔\n            disableOnInteraction: false //鼠标操作后，是否禁用自动轮播\n\n          },\n          pagination: {\n            el: \".swiper-pagination\",\n            //小圆点容器\n            clickable: true //小圆点是否可以点击\n\n          },\n          navigation: {\n            nextEl: \".swiper-button-next\",\n            //下一张按钮的选择器\n            prevEl: \".swiper-button-prev\" //上一张按钮的选择器\n\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA,mC,CACA;;AACA;AACA;EACAA,cADA;EAEAC,IAFA,kBAEA;IACA;MACAC;IADA;EAGA,CANA;EAOAC;IACAC,aADA,2BACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAC,eADA;;cAAA;gBACAC,MADA;;gBAEA;kBACA;gBACA,CAFA,MAEA;kBACA;oBACAC,oBADA;oBAEAC;kBAFA;gBAIA;;cATA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAUA;EAXA,CAPA;EAoBAC,OApBA,qBAoBA;IACA;EACA,CAtBA;EAuBAC;IACAR,UADA,wBACA;MAAA;;MACA;QACA;UACAS,gBADA;UACA;UACAC;YACA;YACAC,WAFA;YAEA;YACAC,2BAHA,CAGA;;UAHA,CAFA;UAOAC;YACAC,wBADA;YACA;YACAC,eAFA,CAEA;;UAFA,CAPA;UAWAC;YACAC,6BADA;YACA;YACAC,6BAFA,CAEA;;UAFA;QAXA;MAgBA,CAjBA;IAkBA;EApBA;AAvBA","names":["name","data","bannerList","methods","getBannerList","reqBannerList","result","message","type","mounted","watch","spaceBetween","autoplay","delay","disableOnInteraction","pagination","el","clickable","navigation","nextEl","prevEl"],"sourceRoot":"src/views/Home/Banner","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div id=\"banne-wapper\">\r\n    <div id=\"banner\">\r\n      <!--轮播图容器-->\r\n      <div class=\"swiper-container\" ref=\"banner_swiper\">\r\n        <!-- 承装每一屏 -->\r\n        <div class=\"swiper-wrapper\">\r\n          <!-- v-for生成每一屏 -->\r\n          <div\r\n            class=\"swiper-slide\"\r\n            v-for=\"banner in bannerList\"\r\n            :key=\"banner.targetId\"\r\n          >\r\n            <img :src=\"banner.imageUrl\" />\r\n          </div>\r\n        </div>\r\n        <!-- 小圆点 -->\r\n        <div class=\"swiper-pagination\"></div>\r\n        <!-- 上一张、下一张按钮 -->\r\n        <div class=\"swiper-button-prev\"></div>\r\n        <div class=\"swiper-button-next\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入Swpier\r\nimport Swiper from \"swiper\";\r\nimport \"swiper/css/swiper.min.css\";\r\n// 引入banner数据\r\nimport { reqBannerList } from \"@/api\";\r\nexport default {\r\n  name: \"Banner\",\r\n  data() {\r\n    return {\r\n      bannerList: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async getBannerList() {\r\n      let result = await reqBannerList();\r\n      if (result.code === 200) {\r\n        this.bannerList = result.banners;\r\n      } else {\r\n        this.$message({\r\n          message: \"轮播图数据请求失败\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getBannerList();\r\n  },\r\n  watch: {\r\n    bannerList() {\r\n      this.$nextTick(() => {\r\n        new Swiper(this.$refs.banner_swiper, {\r\n          spaceBetween: 30, //每一屏之间的距离\r\n          autoplay: {\r\n            //自动轮播配置\r\n            delay: 2000, //轮播间隔\r\n            disableOnInteraction: false, //鼠标操作后，是否禁用自动轮播\r\n          },\r\n          pagination: {\r\n            el: \".swiper-pagination\", //小圆点容器\r\n            clickable: true, //小圆点是否可以点击\r\n          },\r\n          navigation: {\r\n            nextEl: \".swiper-button-next\", //下一张按钮的选择器\r\n            prevEl: \".swiper-button-prev\", //上一张按钮的选择器\r\n          },\r\n        });\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n#banne-wapper {\r\n  border: 2px red solid;\r\n  display: flex;\r\n  justify-content: center;\r\n  #banner {\r\n    background-color: black;\r\n    width: 1080px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}